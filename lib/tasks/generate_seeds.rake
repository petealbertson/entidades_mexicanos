# lib/tasks/generate_seeds.rake
namespace :db do
  desc "Generate db/seeds.rb from current database records"
  task generate_seeds: :environment do
    seed_file_path = Rails.root.join('db', 'seeds.rb')

    puts "Generating #{seed_file_path} from local database..."

    File.open(seed_file_path, 'w') do |file|
      file.puts "# This file is auto-generated by the 'rake db:generate_seeds' task."
      file.puts "# It contains data fetched from the local database at the time of generation."
      file.puts "# It's recommended to review this file before running `rails db:seed`."
      file.puts ""
      file.puts "puts 'Seeding Estados...'"
      file.puts "ActiveRecord::Base.transaction do" # Start transaction for Estados

      Estado.order(:clave).find_each do |estado|
        file.puts "  Estado.find_or_create_by!(clave: '#{estado.clave}') do |e|"
        file.puts "    e.nombre = '#{escape_string(estado.nombre)}'"
        file.puts "    e.abbreviation = '#{escape_string(estado.abbreviation)}'"
        # Add any other Estado attributes here
        file.puts "  end"
      end

      file.puts "end" # End transaction for Estados
      file.puts "puts \"Seeded #{Estado.count} Estados.\""
      file.puts ""

      file.puts "puts 'Seeding Municipios...'"
      file.puts "ActiveRecord::Base.transaction do" # Start transaction for Municipios

      Municipio.joins(:estado).order('estados.clave', :clave).find_each do |municipio|
        # Find the associated estado within the seed file logic
        file.puts "  estado_#{municipio.estado.clave} = Estado.find_by!(clave: '#{municipio.estado.clave}')"
        file.puts "  Municipio.find_or_create_by!(clave: '#{municipio.clave}', estado: estado_#{municipio.estado.clave}) do |m|"
        file.puts "    m.nombre = '#{escape_string(municipio.nombre)}'"
        # Add any other Municipio attributes here
        file.puts "  end"
      end

      file.puts "end" # End transaction for Municipios
      file.puts "puts \"Seeded #{Municipio.count} Municipios.\""
      file.puts ""


      file.puts "puts 'Seeding Colonias...'"
      file.puts "ActiveRecord::Base.transaction do" # Start transaction for Colonias

      # Eager load associated municipio and its estado to avoid N+1 queries
      # Order ensures consistency if run multiple times
      Colonia.includes(municipio: :estado).order('estados.clave', 'municipios.clave', :clave).find_each do |colonia|
        municipio = colonia.municipio
        estado = municipio.estado # Already loaded via includes

        # Find the associated municipio within the seed file logic
        file.puts "  # Find Estado and Municipio first"
        file.puts "  estado_#{estado.clave} = Estado.find_by!(clave: '#{estado.clave}')"
        file.puts "  municipio_#{estado.clave}_#{municipio.clave} = Municipio.find_by!(clave: '#{municipio.clave}', estado: estado_#{estado.clave})"

        # Use find_or_create_by! for Colonias as well to make seeds idempotent
        file.puts "  Colonia.find_or_create_by!(clave: '#{colonia.clave}', municipio: municipio_#{estado.clave}_#{municipio.clave}) do |c|"
        file.puts "    c.nombre = '#{escape_string(colonia.nombre)}'"
        file.puts "    c.latitud = #{colonia.latitud.inspect}" # Use inspect for numbers/nil
        file.puts "    c.longitud = #{colonia.longitud.inspect}"
        file.puts "    c.altitud_msm = #{colonia.altitud_msm.inspect}"
        # Add any other Colonia attributes here
        file.puts "  end"
      end

      file.puts "end" # End transaction for Colonias
      file.puts "puts \"Seeded #{Colonia.count} Colonias.\""
      file.puts ""
      file.puts "puts 'Finished seeding.'"
    end

    puts "Done. #{seed_file_path} generated successfully."
  end
end

# Helper function to escape single quotes in names
def escape_string(str)
  str&.gsub("'", "\\\\'") || '' # Handle nil case
end